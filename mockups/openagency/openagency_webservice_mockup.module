<?php

/**
 * @file
 * Webservice mockup of Open Agency
 */
function openagency_webservice_mockup_menu() {
 
  $items['openagency_webservice'] = array(
    'page callback' => 'openagency_webservice_mockup_request',
    'access callback' => 'openagency_webservice_mockup_access',
  );

  $items['openagency_webservice/test'] = array(
    'page callback' => 'openagency_webservice_test',
    'access callback' => TRUE
  );

  return $items;
}

function openagency_webservice_test() {
  return '<form name="test" action="openagency_webservice" method="POST" target="_blank"><textarea name="xml"></textarea><input type="submit" name="sub" value="submit"/></form>';
}

/**
 * Faking the request and returns result. If other requests are made than on city = kÃ¸benhavn an error will be returned.
 * @return String json
 */
function openagency_webservice_mockup_request() {
  if (isset($_POST['xml'])) {
    $data = rawurldecode($_POST['xml']);
  }
  else {
    $data = file_get_contents('php://input');
  }

  $envelope = openagency_webservice_mockup_parse_xml($data);
  
  try {
    $request = $envelope->Body->children();
    switch ($request->getName()) {
      case 'pickupAgencyListRequest' :
        return openagency_webservice_pickupAgencyListRequest($request->pickupAgencyListRequest);
        break;
      case 'serviceRequest' :
        return openagency_webservice_serviceRequest($request->serviceRequest);
      case 'findLibraryRequest' :
        return openagency_webservice_findLibraryRequest($request->findLibraryRequest);
        break;
      default:
        return SOAP_FAULT;
    }
  } catch (Exception $e) {
    return SOAP_FAULT;
  }
}

function openagency_webservice_findLibraryRequest($request) {
  $path = drupal_get_path('module', 'openagency_webservice_mockup');
  
  $query = $request->anyField;
  $outPut = $request->outputType;

  if ($query != 'als') {
    drupal_add_http_header('Content-Type', 'application/json');
    $resp = file_get_contents($path . '/no_agencies_found.json');
    print $resp;
    return;
  }

  switch ($outPut) {
    case 'json':
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path . '/als.json');
      break;
    case 'xml':
      drupal_add_http_header('Content-Type', 'text/xml; charset=utf-8');
      $resp = file_get_contents($path . '/als.xml');
      break;
    default :
    case 'json':
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path . '/als.json');
      break;
  }

  print $resp;
}

/**
 * Printing the result of the serviceRequest in json
 */
function openagency_webservice_serviceRequest($request) {
  $path = drupal_get_path('module', 'openagency_webservice_mockup');
  
  $agencyId = $request->agencyId;
  $service = $request->service;
  switch ($request->outputType) {
    case 'xml':
      drupal_add_http_header('Content-Type', 'text/xml; charset=utf-8');
      $resp = file_get_contents($path . '/openagency_servicerequest.xml');
      break;
    case 'json':
    default :
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path . '/openagency_servicerequest.json');
      break;
  }
  print $resp;
}

/**
 * Printing the result of the pickupAgencyListRequest in xml or json
 */
function openagency_webservice_pickupAgencyListRequest($request) {
  $path = drupal_get_path('module', 'openagency_webservice_mockup');
  
  $query = $request->anyField;
  $outPut = $request->outputType;

  if ($query != 'als') {
    drupal_add_http_header('Content-Type', 'application/json');
    $resp = file_get_contents($path . '/no_agencies_found.json');
    print $resp;
    return;
  }

  switch ($outPut) {
    case 'json':
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path . '/als.json');
      break;
    case 'xml':
      drupal_add_http_header('Content-Type', 'text/xml; charset=utf-8');
      $resp = file_get_contents($path . '/als.xml');
      break;
    default :
    case 'json':
      drupal_add_http_header('Content-Type', 'application/json');
      $resp = file_get_contents($path . '/als.json');
      break;
  }

  print $resp;
}

/**
 * Parsing the request into a xml object
 * @param type request from ting-client
 * @return \SimpleXMLElement
 */
function openagency_webservice_mockup_parse_xml($soap) {
  $pattern = "/:?SOAP-ENV:?/";
  $replace = '';
  $xml = preg_replace($pattern, $replace, $soap);

  $envelope = new SimpleXMLElement($xml);
  return $envelope;
}

function openagency_webservice_mockup_access() {
  return TRUE;
}