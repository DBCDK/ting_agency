<?php

//require_once('TingClientAgencyBranch.php');
module_load_include('php', 'ting_agency', 'TingClientAgencyBranch');
module_load_include('inc', 'ting_agency', 'theme/ting_agency.theme');
module_load_include('inc', 'ting_agency', 'ting_agency.exception');

require_once('TingAgency.php');
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/** \brief Hook into ting-client
 *
 * Implements hook_ting_client_webservice (@see ting_client.module)
 * */
function ting_agency_ting_client_webservice() {
  $ret = array();
  $ret['agency']['class'] = 'AgencyRequest';
  $ret['agency']['url'] = 'agency_search_url';
  $ret['agency']['xsd_url'] = 'agency_search_xsd_url';
  $ret['agency']['xsdNamespace'] = array(0 => 'http://oss.dbc.dk/ns/openagency');
  return $ret;
}

/**
 * Implements hook_form_FORM_ID_alter
 * (ting_client_admin_webservices_settings_alter) Creates a field for adding a
 * URL for the Ting Agency Search webservice
 */
function ting_agency_form_ting_client_admin_webservices_settings_alter(&$form, &$form_state, $form_id) {

  // don't start by defining the fieldset as an array. This way other modules can extend the fieldset.
  $form['agency']['#type'] = 'fieldset';
  $form['agency']['#title'] = t('OpenAgency settings');
  $form['agency']['#description'] = t('Client for OpenAgency, a service that can be used for getting information about Danish libraries.');
  $form['agency']['#collapsible'] = TRUE;
  $form['agency']['#collapsed'] = FALSE;
  $form['agency']['#tree'] = FALSE;

  $form['agency']['agency_search_url'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenAgency URL'),
    '#description' => t('URL to the Ting agency search webservice, e.g. http://openagency.addi.dk/1.6/'),
    '#required' => TRUE,
    '#default_value' => variable_get('agency_search_url', ''),
  );

  $form['agency']['agency_search_xsd_url'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenAgency XSD URL'),
    '#description' => t('URL to the Ting agency search XSD, e.g. http://openagency.addi.dk/x.x/openagency.xsd'),
    '#required' => FALSE,
    '#default_value' => variable_get('agency_search_xsd_url', ''),
  );
}

/**
 * Implements hook_theme
 *
 * @return type
 */
function ting_agency_theme() {
  return array(
    'ting_agency_library' => array(
      'variables' => array(
        'branchName' => NULL,
        'agencyName' => NULL,
        'actions' => NULL,
        'moreinfo' => NULL,
        'branchid' => NULL,
        'add_classes' => array(),
        'toggle_enabled' => TRUE,
        'temporarilyClosedReason' => NULL
      ),
      'template' => 'theme/ting_agency_library',
    ),
    'ting_agency_more_info' => array(
      'variables' => array(
        'branch' => NULL,
        'openingHours' => NULL,
        'toggle_enabled' => TRUE,
        'tools' => NULL,
        'address' => NULL,
        'pickupallowed' => NULL,
        'librarydkcontact' => NULL,
        'contact' => NULL
      ),
      'template' => 'theme/ting_agency_more_info',
    ),
    'ting_agency_opening_hours' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_tools' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_address' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_librarydk_contact' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_contact' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_pickup_allowed' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_branch_short_name' => array(
      'variables' => array('branch' => NULL,),
    ),
  );
}

/**
 * Implements hook_flush_caches
 * */
function ting_agency_flush_caches() {
  return array('cache_agency_webservice');
}

function ting_agency_userdata_form($form, &$form_state, $fields, $userData = NULL, $branchid = NULL) {
  $params = isset($fields) ? $fields->getUserParameters() : NULL;
  if (empty($params)) {
    $form['wrapper']['error'] = array('#markup' => _ting_agency_error_no_agency_user_data());
    return $form;
  }

  $form['description'] = array(
    '#theme' => 'html_tag',
    '#tag' => 'p',
    '#value' => t('description_text', array(), array('context' => 'bibdk_favourite')),
    '#weight' => -101,
  );

  // checkbox to unmask password fields
  $form['uncheck'] = array(
    '#title' => t('Show_masked_input'),
    '#type' => 'checkbox',
    '#attributes' => array('class' => array(drupal_html_class('bibdk_unmask_password_field'))),
    '#weight' => -100,
  );

  $form['wrapper'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(drupal_html_class('switch_me')),
    ),
  );

  // insert a fake password field to stop browsers from autofilling the real fields
  // with saved password
  $form['wrapper']['fake_password'] = array(
    '#attributes' => array('style' => array('display:none;')),
    '#type' => 'password',
  );

  foreach ($fields->getUserParameters() as $userParameter) {
    $type = $userParameter['type'];
    $title = isset($userParameter['field_name']) ? $userParameter['field_name'] : "";
    $userDataElement = isset($userData[$userParameter['type']]) ? $userData[$userParameter['type']] : NULL;
    $value = isset($form_state['values'][$type]) ? $form_state['values'][$type] : $userDataElement;
    if ($type == 'userMail') {
      if (!$userParameter['required']) {
        $title .= ' ' . t('label_notice_recommended', array(), array('context' => 'ting_agency'));
      }
    }
    $form['wrapper'][$type] = array(
      '#attributes' => array(
        'class' => array((isset($userParameter['field_type']) && $userParameter['field_type'] == 'password') ? drupal_html_class('bibdk_password_field') : ''),
      ),
      '#type' => 'textfield',
      '#title' => $title,
      '#description' => isset($userParameter['field_description']) ? $userParameter['field_description'] : NULL,
      '#required' => $userParameter['required'],
      '#default_value' => isset($value) ? $value : "",
    );
  }

  if (isset($branchid)) {
    $form['wrapper']['subdivision'] = ting_agency_get_selector_for_subagencies($branchid);
  }

  return $form;
}

function ting_agency_get_selector_for_subagencies($branchId) {
  $agency = new TingAgency($branchId);

  if (!($agency->hasSubDivisions($branchId))) {
    return;
  }

  $options = $agency->getPickupAgencySelectList();
  $options = $options['Bogbussen:'];

  $form_element = array(
    '#title' => t('Select bus stop', array(), array('context' => 'bibdk_favourite')),
    '#type' => 'select',
    '#options' => $options,
  );

  return $form_element;
}

function _ting_agency_error_no_agency_user_data() {
  return t('no_agency_data_from_agency');
}

/**
 * Render the view of an agency branch and wrap it in an form element
 *
 * @param TingClientAgencyBranch $branch
 * @param Array $settings
 * @return mixed
 */
function ting_agency_view_agency_branch(TingClientAgencyBranch $branch, $settings) {
  // Actions can be both links and form elements, and needs to handles separately
  $actions = isset($settings['#actions']) ? $settings['#actions'] : '';
  unset($settings['#actions']);

  $classes = array('favourite-' . $branch->branchId);
  if ($branch->isOrderLibrary()) {
    $classes[] = 'order-agency';
  }

  // Set default values
  global $language;
  $default = array(
    '#theme' => 'ting_agency_library',
    '#branchName' => $branch->getBranchName($language->language),
    '#actions' => drupal_render($actions),
    '#add_classes' => $classes,
    '#moreinfo' => ting_agency_get_more_info($branch),
    '#branchid' => $branch->branchId,
    '#temporarilyClosedReason' => ting_agency_temporarily_closed_message($branch),
  );

  // create render array
  $render['library'] = $settings;
  $render['library'] += $default;
  $render['action'] = $actions;

  // place branch on top if set as order-agency
  if ($branch->isOrderLibrary()) {
    $render['#weight'] = -1;
  }

  return array(
    '#title' => $branch->getBranchName($language->language),
    $branch->branchId => $render,
  );
}

/** Check if Temporarily closed message exists for branch and return message
 *
 * @param $branch
 * @return string
 */
function ting_agency_temporarily_closed_message($branch) {
  global $language;
  // Handle TemporarilyClosedReason
  $tmp_reason = $branch->getTemporarilyClosedReason($language->language);
  if ($tmp_reason != 'ting_agency_no_temporarilyClosedReason') {
    // Hide all drupalmessages
    $messages = drupal_get_messages();
    // Set  message for temporarilyClosedReason
    drupal_set_message($tmp_reason, 'warning');
    $tmp_reason = theme('status_messages');
    // Restore old messages
    foreach ($messages as $key => $message) {
      drupal_set_message($message[0], $key);
    }
  }
  else {
    $tmp_reason = NULL;
  }

  return $tmp_reason;
}

/** Generate more info for branch
 * get default moreinfo for a branch
 *
 * @param TingClientAgencyBranch $branch
 * @return string
 * @throws Exception
 */
function ting_agency_get_more_info(TingClientAgencyBranch $branch) {
  global $language;
  $tools = get_ting_agency_tools($branch);
  return theme('ting_agency_more_info', array(
    'branch' => $branch,
    'openingHours' => $branch->getOpeningHours($language->language),
    'tools' => drupal_render($tools),
    'address' => $branch->getAddress(),
    'pickupallowed' => $branch->getPicupAllowed(),
    'librarydkcontact' => ting_agency_element_create_list($branch->getLibrarydkContact()),
    'contact' => ting_agency_element_create_list($branch->getContact()),
  ));
}
