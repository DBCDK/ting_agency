<?php
//require_once('TingClientAgencyBranch.php');
module_load_include('php', 'ting_agency', 'TingClientAgencyBranch');
module_load_include('inc','ting_agency','theme/ting_agency.theme');
module_load_include('inc','ting_agency','ting_agency.exception');

require_once('TingAgency.php');
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/** \brief Hook into ting-client
 *
 * Implements hook_ting_client_webservice (@see ting_client.module)
 * */
function ting_agency_ting_client_webservice() {
  $ret = array();
  $ret['agency']['class'] = 'AgencyRequest';
  $ret['agency']['url'] = 'agency_search_url';
  $ret['agency']['xsdNamespace'] = array(0 => 'http://oss.dbc.dk/ns/openagency');
  return $ret;
}

/**
 * Implements hook_form_FORM_ID_alter (ting_client_admin_webservices_settings_alter)
 * Creates a field for adding a URL for the Ting Agency Search webservice
 */
function ting_agency_form_ting_client_admin_webservices_settings_alter(&$form, &$form_state, $form_id) {
  $form['ting']['agency_search_url'] = array(
    '#type' => 'textfield',
    '#title' => t('OpenAgency URL'),
    '#description' => t('URL to the Ting agency search webservice, e.g. http://openagency.addi.dk/1.6/'),
    '#required' => TRUE,
    '#default_value' => variable_get('agency_search_url', ''),
  );
}

/**
 * Implements hook_theme
 * @return type
 */
function ting_agency_theme() {
  return array(
    'ting_agency_library' => array(
      'variables' => array('branchName' => NULL, 'agencyName'=>NULL, 'actions' => NULL, 'moreinfo' => NULL, 'branchid' => NULL, 'add_classes'=> array()),
      'template' => 'theme/ting_agency_library',
    ),
    'ting_agency_more_info' => array(
      'variables' => array('branch' => NULL,'openingHours' => NULL ),
      'template' => 'theme/ting_agency_more_info',
    ),
    'ting_agency_opening_hours' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_tools' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_address' => array(
      'variables' => array('branch' => NULL,),
    ),
      'ting_agency_librarydk_contact' => array(
      'variables' => array('branch' => NULL,),
    ),
    'ting_agency_contact' => array(
      'variables' => array('branch' => NULL,),
    ),
  );
}


/**
   * Implements hook_flush_caches
   * */
  function ting_agency_flush_caches() {
    return array('cache_agency_webservice');
  }


function ting_agency_userdata_form($form, &$form_state, $fields, $userData = null){
  $params = isset($fields) ? $fields->getUserParameters() : null;
  if (empty($params)) {
    $form['wrapper']['error'] = array('#markup' => _ting_agency_error_no_agency_user_data());
    return $form;
  }

  // checkbox to unmask password fields
  $form['uncheck'] = array(
    '#title' => t('Show_masked_input'),
    '#type' => 'checkbox',
    '#attributes' => array('class' => array(drupal_html_class('bibdk_unmask_password_field'))),
    '#weight' => -100,
  );
  
  $form['wrapper'] = array(
    '#type'=>'container',
    '#attributes' => array(
      'class' => array(drupal_html_class('switch_me')),
    ),    
  );

  foreach ($fields->getUserParameters() as $userParameter) {
    $type = $userParameter['type'];
    $userDataElement = isset($userData[$userParameter['type']]) ? $userData[$userParameter['type']] : NULL;
    $value = isset($form_state['values'][$type]) ? $form_state['values'][$type] :  $userDataElement;
    $form['wrapper'][$type] = array(
      '#attributes' => array('class' => array((isset($userParameter['field_type']) && $userParameter['field_type'] == 'password') ? drupal_html_class('bibdk_password_field') : '')),
      '#type' => 'textfield',
      '#title' => isset($userParameter['field_name']) ? $userParameter['field_name'] : "",
      '#description' => isset($userParameter['field_description']) ? $userParameter['field_description'] : NULL,
      '#required' => $userParameter['required'],
      '#default_value' => isset($value) ? $value : "",
    );
  }

  return $form;

}

function _ting_agency_error_no_agency_user_data() {
  return t('no_agency_data_from_agency');
}
